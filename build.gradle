plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'org.demo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
//    set('springShellVersion', "3.4.0")
}

dependencies {
    implementation platform('org.springframework.boot:spring-boot-dependencies:3.1.5')
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'org.apache.httpcomponents:httpcore:4.4.16'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.3'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    // runtimeOnly("com.h2database:h2")
    implementation("com.mysql:mysql-connector-j:8.0.33")
    implementation("com.google.cloud.sql:mysql-socket-factory-connector-j-8:1.25.0")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Frontend resource handling
processResources {
    // Make sure to include all static resources
    exclude 'static/**'
    doLast {
        copy {
            from 'src/main/resources/static'
            into "${buildDir}/resources/main/static"
        }
    }
}

// ---------------------------
// FRONTEND RESOURCE HANDLING
// ---------------------------

// Task to copy static frontend resources into the build directory
tasks.register('processFrontendResources', Copy) {
    from 'src/main/frontend' // Source folder for static files (customize as needed)
    into project.layout.buildDirectory.file("resources/main/static")
}

// Ensure Spring Boot JAR depends on frontend resources
tasks.jar {
    dependsOn processFrontendResources
}
// Optional: Resolve main class after frontend resources are processed
tasks.resolveMainClassName {
    dependsOn processFrontendResources
}

// Development task to manually refresh frontend resources
tasks.register('refreshFrontend', Copy) {
    from 'src/main/frontend'
    into project.layout.buildDirectory.file("resources/main/static")
    description = "Quickly refresh frontend resources for development"
    group = "Frontend"
}
